version: 1.0.{build}
branches:
  only:
  - master
skip_tags: true
build:
  verbosity: minimal
image: Visual Studio 2017
max_jobs: 1
environment:
 global:
  paperkey:
    secure: MxOJZPR1tTkos0f/z1rM4fjHtWmg4kR3B6uAz8u59R5uDteHyeOSFYwATBPonHVC8oSKAWyrtma2Krk1fIXPMJs+FizIDsxh8VhsgMaeNnU=
  password:
    secure: ano7rXNY2j/2yhwBrc7Jag==
cache:
  - C:\projects\neon_service\qt-everywhere-opensource-src-4.8.7    
build_script:
- cmd: >-
    curl -fsS -o keybase_setup_amd64.msi "https://prerelease.keybase.io/keybase_setup_amd64.msi"
    
    start /wait msiexec.exe /i keybase_setup_amd64.msi   /quiet /l*v keybase.log
    
    curl -fsS -o 7z1900.msi "https://www.7-zip.org/a/7z1900.msi"
    
    start /wait msiexec.exe /i 7z1900.msi  /qb
    
    C:\Python27\python.exe -m pip install cfscrape
    
    C:\Python27\python.exe -m pip install youtube-dl
    
    set PATH=%PATH%;%localappdata%\Keybase\

    keybase -v
    
    REM type keybase.log
    
    echo "loging in to keybase"
    
    ping -n 4 127.0.0.1>nul
    
    call keybase oneshot -u kenkit --paperkey "%paperkey%"
    
    set ROOT=%cd%
    
    IF NOT EXIST  "qt-everywhere-opensource-src-4.8.7" 
    (curl -L -o qt-everywhere-opensource-src-4.8.7_build.zip "https://github.com/kenkit/Cloud_Commander_UI/blob/master/qt-everywhere-opensource-src-4.8.7_build.zip?raw=true" && call 7z x qt-everywhere-opensource-src-4.8.7_build.zip)
    
    
    cd qt-everywhere-opensource-src-4.8.7
    
    set QTDIR=%cd%\
    
    cd bin
    
    set QT_BIN=%cd%\
    
    set PATH=%PATH%;%cd%
    
    dir .
    
    set OPENSSL_ROOT_DIR=C:\OpenSSL-Win32\
    
    cd %ROOT%
    
    git config --global --add protocol.keybase.allow always

    git clone keybase://private/kenkit/neon_service 
    
    cd neon_service 
    
    git submodule update --init --recursive

    mkdir build
    
    cd build

    cmake ../ -DCMAKE_BUILD_TYPE=Debug -DBOOST_ROOT=C:\Libraries\boost_1_67_0 -DQT_MOC_EXECUTABLE=%QT_BIN%\moc.exe -DQT_RCC_EXECUTABLE=%QT_BIN%\rcc.exe -DQT_UIC_EXECUTABLE=%QT_BIN%\uic.exe
    
    cmake --build ../build  -j 1 --config Debug
    
    cd ../
    
    xcopy C:\projects\neon-service\neon_service\curl\builds\libcurl-vc-x86-release-dll-ipv6-sspi-winssl\bin\*.dll C:\projects\neon-service\neon_service\bin\Debug\. /Y 
    
    7z a Neon_Service.zip bin -p%password%
    
test_script:
- cmd: >-
    cd build
    
    ctest -VV -C Debug -R neon_tests
    
on_finish:
  - ps: (new-object net.webclient).UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path C:\projects\neon-service\neon_service\bin\Debug\tests.xml))
  
artifacts:
- path: neon_service/Neon_Service.zip 
  name: Neon_Service.zip 
  
before_deploy:
- ps: >-
    echo "NEON SERVICE CHANGELOG"  | Add-Content  -Encoding UTF8 -Path tmp

    echo "************************"  | Add-Content  -Encoding UTF8 -Path tmp

    git log -10   --pretty="%aD--%B" |Add-Content  -Encoding UTF8 -Path tmp

    $currntly=(Resolve-Path .\).Path

    cd $currntly

    $rnp = Resolve-Path("tmp")

    $rnc = [IO.File]::ReadAllText($rnp)

    Set-AppveyorBuildVariable -Name release_description -Value $rnc


  deploy:
- provider: GitHub
  description: $(release_description)
  auth_token:
    secure: 01oN0sew4MzhHwKsFR7WSabMnqgCt2gZtjS6ywYslcnGyt7XFnOIbzNBfwSTV1Xc
  repository: kenkit/neon_service
  artifact: Neon_Service.zip 
