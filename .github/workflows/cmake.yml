name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  Windows:
   # The CMake configure and build commands are platform agnostic and should work equally
   # well on Windows or Mac.  You can convert this to a matrix build if you need
   # cross-platform coverage.
   # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
   strategy:
     matrix:
       os: [windows-latest]
   runs-on: ${{ matrix.os }}

   steps:
   - uses: actions/checkout@v2
   - name: Configure SSH
     run: |
         Set-Service ssh-agent -StartupType Manual
         Start-Service ssh-agent
         git config --global core.sshCommand "'C:\Windows\System32\OpenSSH\ssh.exe'"
   - name: Add SSH key
     run: |
         echo $env:SSH_PRIVATE_KEY | ssh-add -
     env:
         SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
   - name: Add github.com to known_hosts
     run: |
         mkdir ~/.ssh
         ssh-keyscan github.com >> ~/.ssh/known_hosts

   - name: Create VHD
     run:  diskpart /s %GITHUB_WORKSPACE%\dsk.txt
     shell: cmd

   - name: Mkdir and Checkout submodule
     run: mkdir -p programming/bak && cd programming/bak && git clone git@github.com:kenkit/neon_service_b.git  neon_service
          && cd neon_service && git submodule update --init --recursive && cd ../
     shell: bash
     working-directory: e:/

   - uses: suisei-cn/actions-download-file@v1
     id: downloadfile  # Remember to give an ID if you need the output filename
     name: download qt
     with:
       url: "https://www.dropbox.com/s/8k6qv02x3vpe6s8/qt-everywhere-opensource-src-4.8.7_build.zip?dl=1#"
       target: e:/programming/qt-everywhere-opensource-src-4.8.7_build.zip

   - uses: suisei-cn/actions-download-file@v1
     id: downloadfile2  # Remember to give an ID if you need the output filename
     name: download openssl
     with:
       url: "https://raw.githubusercontent.com/kenkit/neon_server/master/openssl.zip"
       target: e:/programming/openssl.zip

   - name: xtract qt
     run: 7z x e:/programming/qt-everywhere-opensource-src-4.8.7_build.zip
     working-directory: e:/programming/

   - name: xtract openssl
     run: 7z x e:/programming/openssl.zip  -o${{github.workspace}}
     working-directory: e:/programming/

   - name: echo qt path
     run:  dir e:/programming/qt-everywhere-opensource-src-4.8.7
     shell: cmd
     working-directory: e:/programming/

   - name: Install boost
     uses: MarkusJx/install-boost@v1.0.1
     id: install-boost
     with:
       # REQUIRED: Specify the required boost version
       # A list of supported versions can be found here:
       # https://github.com/actions/boost-versions/blob/main/versions-manifest.json
       boost_version: 1.72.0
       # OPTIONAL: Specify a toolset on windows
       toolset: msvc14.2
   - name: Create Build Environment
     # Some projects don't allow in-source building, so create a separate build directory
     # We'll use this as our working directory for all subsequent commands
     run: cmake -E make_directory e:/programming/bak/neon_service/build

   - name: Configure CMake
     # Use a bash shell so we can use the same syntax for environment variable
     # access regardless of the host operating system
     shell: bash
     working-directory: e:/programming/bak/neon_service/build
     # Note the current convention is to use the -S and -B options here to specify source
     # and build directories, but this is only available with CMake 3.13 and higher.
     # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
     run: cmake  cmake -A Win32 ../ -DCMAKE_BUILD_TYPE=%BUILD_TYPE%  -DCMAKE_USE_SCHANNEL=1 -DENABLE_SSL_SERVER=1 -DENABLE_WERROR=0 -DQT_MOC_EXECUTABLE=%QT_BIN%\moc.exe -DQT_RCC_EXECUTABLE=%QT_BIN%\rcc.exe -DQT_UIC_EXECUTABLE=%QT_BIN%\uic.exe -DOTHER_APP=MTK-QTAPP -DCMAKE_INSTALL_PREFIX=%BUILD_TYPE%   -DDISABLE_UTILITIES_PLUGIN=FALSE -DDISABLE_BINARY_SIGN=TRUE -DCMAKE_USE_SCHANNEL=1 -DCMAKE_USE_OPENSSL=0 -DBUILD_TESTING=0 -DBUILD_SHARED_LIBS=1 -DENABLE_QTAPP_LOCAL_TESTING=0
     env:
       BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
       OPENSSL_ROOT_DIR: e:/programming/openssl
       QTDIR : e:/programming/qt-everywhere-opensource-src-4.8.7
       QT_BIN : e:/programming/qt-everywhere-opensource-src-4.8.7/bin

   - name: Build
     working-directory: e:/programming/bak/neon_service/build
     shell: bash
     # Execute the build.  You can specify a specific target with "--target <NAME>"
     run: cmake --build . --config $BUILD_TYPE

   - name: Test
     working-directory: e:/programming/bak/neon_service/build
     shell: bash
     # Execute tests defined by the CMake configuration.
     # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
     run: ctest -C $BUILD_TYPE
      git diff --check HEAD^
